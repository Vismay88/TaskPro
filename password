
//password for testing second letter cap for remember
// raJat123@
// vaibhav123
// vismay1234@
// hardik123@
// sandhya123@

const createUser = async (req, res, next) => {
  try {
    //Check user with that id is exist or not
    let userCheck = await User.findOne({ email: req.body.email });
    if (userCheck) {
      next(new AppError("User with this email id is already exist", 401));
    }
    //Passed all the Validator now create
    const user = new User({
      name: req.body.name,
      email: req.body.email,
      password: req.body.password,
      gender: req.body.gender,
    });
    // Check if there is a file attached in the request
    if (req.file) {
      const photo = new Photo({
        filename: req.file.filename,
        url: `http://localhost:3000/images/${req.file.filename}`,
        extension: req.file.mimetype.split("/")[1],
      });
      const savedPhoto = await photo.save();
      user.photo = savedPhoto._id;
    }
    const savedUser = await user.save();
    console.log(savedUser);
    //If User not saved
    if (!savedUser) {
      next(new AppError("Account not Created Please try again", 401));
    }
    res.status(201).json({
      message: "Your Account is Created Successfully",
      user: savedUser,
    });
  } catch (err) {
    next(globalErrorHandler(err));
  }
};


const multer = require("multer");
const path = require("path");
const User = require("../models/userModel");
const AppError = require("../utils/appError");

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "public/images");
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    cb(null, `user-${Date.now()}${ext}`);
  },
});

const upload = multer({
  storage,
  limits: {
    fileSize: 1024 * 1024 * 5, // 5MB
  },
  fileFilter: (req, file, cb) => {
    if (
      file.mimetype === "image/png" ||
      file.mimetype === "image/jpg" ||
      file.mimetype === "image/jpeg"
    ) {
      cb(null, true);
    } else {
      cb(new AppError("Only .png, .jpg and .jpeg formats allowed"), false);
    }
  },
});

exports.uploadPhoto = upload.single("photo");

exports.createUser = async (req, res, next) => {
  try {
    const userCheck = await User.findOne({ email: req.body.email });
    if (userCheck) {
      return next(new AppError("User with this email id already exists", 401));
    }

    const user = new User({
      name: req.body.name,
      email: req.body.email,
      password: req.body.password,
      gender: req.body.gender,
      photo: req.file ? `/images/${req.file.filename}` : "",
    });
    const savedUser = await user.save();
    console.log(savedUser);

    if (!savedUser) {
      return next(new AppError("Failed to create user", 500));
    }

    res.status(201).json({
      status: "success",
      message: "Your account has been created successfully",
      data: {
        user: savedUser,
      },
    });
  } catch (err) {
    console.log(err);
    next(err);
  }

//......................................................../////////////
const multer = require("multer");
const Photo = require("./../model/photoModel");
const AppError=require("./../Error/appError")

const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    if(!req.body.file){
      cb(new AppError("No profile photos is atteched here",400),false);
     }
    cb(null, "public/images");
  },
  filename: (req, file, cb) => {
    const extensionImage = file.mimetype.split("/")[1];
    console.log(extensionImage);
    cb(null, `${req.body.name}-${file.originalname}`);
  },
});
const multerFilter = (req,file, cb) => {  
  if (file.mimetype==="image/jpg" || file.mimetype==="image/png" ||file.mimetype==="image/jpeg" ) {
    cb(null, true);
  } 

  else {
    cb(new AppError("Not an image! please upload only jpg/jpeg/png images.", 400), false);
  }
};

const upload = multer({
   storage,
   fileFilter:multerFilter,
   limits:{fileSize:1000000}
  });